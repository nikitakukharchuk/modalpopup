{"ast":null,"code":"var _jsxFileName = \"/home/dante/MyProjects/untitled/src/SearchComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input, Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst SearchComponent = _ref => {\n  _s();\n  let {\n    data,\n    onSearch\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedTagId, setSelectedTagId] = useState(undefined);\n  const handleSearch = () => {\n    onSearch(searchTerm, selectedTagId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n      placeholder: \"Search by tags\",\n      onSearch: handleSearch,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        width: '80%',\n        marginRight: 'auto'\n      },\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 120,\n        marginLeft: 'auto'\n      },\n      placeholder: \"Select tag\",\n      onChange: value => setSelectedTagId(value),\n      value: selectedTagId,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: undefined,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), data.map(tag => /*#__PURE__*/_jsxDEV(Option, {\n        value: tag.id,\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchComponent, \"LeiE5fOtGwLsecgqnxKh3x49Gc4=\");\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","Input","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","SearchComponent","_ref","_s","data","onSearch","searchTerm","setSearchTerm","selectedTagId","setSelectedTagId","undefined","handleSearch","children","Search","placeholder","onChange","e","target","value","style","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","map","tag","id","name","_c","$RefreshReg$"],"sources":["/home/dante/MyProjects/untitled/src/SearchComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Input, Select } from 'antd';\n\nconst { Option } = Select;\n\ntype SearchProps = {\n    data: { id: number; name: string }[];\n    onSearch: (searchTerm: string, selectedTagId: number | undefined) => void;\n};\n\nconst SearchComponent = ({ data, onSearch }: SearchProps) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedTagId, setSelectedTagId] = useState<number | undefined>(undefined);\n\n    const handleSearch = () => {\n        onSearch(searchTerm, selectedTagId);\n    };\n\n    return (\n        <>\n            <Input.Search\n                placeholder=\"Search by tags\"\n                onSearch={handleSearch}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                style={{ width: '80%', marginRight: 'auto' }}\n                value={searchTerm}\n            />\n            <Select\n                style={{ width: 120, marginLeft: 'auto' }}\n                placeholder=\"Select tag\"\n                onChange={(value) => setSelectedTagId(value)}\n                value={selectedTagId}\n            >\n                <Option value={undefined}>All</Option>\n                {data.map((tag) => (\n                    <Option key={tag.id} value={tag.id}>\n                        {tag.name}\n                    </Option>\n                ))}\n            </Select>\n        </>\n    );\n};\n\nexport default SearchComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAM;EAAEC;AAAO,CAAC,GAAGL,MAAM;AAOzB,MAAMM,eAAe,GAAGC,IAAA,IAAqC;EAAAC,EAAA;EAAA,IAApC;IAAEC,IAAI;IAAEC;EAAsB,CAAC,GAAAH,IAAA;EACpD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAqBiB,SAAS,CAAC;EAEjF,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBN,QAAQ,CAACC,UAAU,EAAEE,aAAa,CAAC;EACvC,CAAC;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA,CAACH,KAAK,CAACmB,MAAM;MACTC,WAAW,EAAC,gBAAgB;MAC5BT,QAAQ,EAAEM,YAAa;MACvBI,QAAQ,EAAGC,CAAC,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC/CC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAO,CAAE;MAC7CH,KAAK,EAAEZ;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACF5B,OAAA,CAACF,MAAM;MACHwB,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEM,UAAU,EAAE;MAAO,CAAE;MAC1CZ,WAAW,EAAC,YAAY;MACxBC,QAAQ,EAAGG,KAAK,IAAKT,gBAAgB,CAACS,KAAK,CAAE;MAC7CA,KAAK,EAAEV,aAAc;MAAAI,QAAA,gBAErBf,OAAA,CAACG,MAAM;QAACkB,KAAK,EAAER,SAAU;QAAAE,QAAA,EAAC;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACrCrB,IAAI,CAACuB,GAAG,CAAEC,GAAG,iBACV/B,OAAA,CAACG,MAAM;QAAckB,KAAK,EAAEU,GAAG,CAACC,EAAG;QAAAjB,QAAA,EAC9BgB,GAAG,CAACE;MAAI,GADAF,GAAG,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA,gBACV;AAEX,CAAC;AAACtB,EAAA,CAhCIF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}